/**
 * @input A : Integer array
 * @input n1 : Integer array's ( A ) length
 * 
 * @Output Integer array. You need to malloc memory, and fill the length in len1
 */
 struct stack
 {
     int data;
     struct stack *next;
 };
 
 void push(struct stack **head,int d)
 {
     struct stack *node = (struct stack *)malloc(sizeof(struct stack));
     node->data=d;
     node->next=*head;
     *head=node;
 }
 
 int top(struct stack **head)
 {
     struct stack *curr = *head;
     return curr->data;
 }
 
 void pop(struct stack **head)
 {
     struct stack *curr = *head;
     *head=curr->next;
 }
 
 int isempty(struct stack **head)
 {
     if(*head==NULL)
        return 1;
     return 0;
 }
 
int* prevSmaller(int* A, int n1, int *len) 
{
    *len=n1;
    int *arr = (int *)malloc(sizeof(int)*n1);
    int i=0,j=0;
    struct stack *head=NULL;
    
    for(i=0;i<n1;i++)
    {
        if(i==0){
            arr[i]=-1;
            push(&head,i);
        }
        else{
            while(!isempty(&head) && A[i]<=A[top(&head)])
            {
                pop(&head);
            }
            if(!isempty(&head))
                arr[i]=A[top(&head)];
            else
                arr[i]=-1;
            push(&head,i);
        }
    }
    
    return arr;
    
    
}
